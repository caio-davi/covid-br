{"version":3,"sources":["states.js","components/LeafLetMap.jsx","components/LineChart.jsx","components/Options.jsx","components/App.jsx","index.js"],"names":["states","LeafletMap","props","className","Map","center","zoom","zoomSnap","TileLayer","url","attribution","markers","i","cases","position","getPosition","parseInt","uid","undefined","dataType","push","Circle","key","radius","color","Popup","dataOptions","name","getName","sumStatus","data","status","count","values","state","labels","dates","date","buildDataset","label","datasets","borderColor","backgroundColor","chartData","tableContents","statesInfo","rows","row","type","tableHeaders","headers","field","sort","header","LineChart","options","responsive","scrollY","maxHeight","striped","bordered","small","columns","Status","statusCollection","newStatus","showOnMapOptions","value","Options","day","min","max","length","defaultValue","handle","handleSlider","onChange","handleDropdown","placeholder","style","marginTop","cursor","onClick","window","open","Handle","Slider","suspects","enabled","refuses","deaths","uId","App","React","useState","setDay","setDataType","setData","useEffect","fetch","method","Headers","Origin","then","response","text","str","substring","newData","JSON","parse","brazil","splice","Object","keys","dragging","index","restProps","prefixCls","overlay","visible","placement","obj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d425da.chunk.js","sourcesContent":["const states = [\n{ 'uid' : 11, 'name':  'Rondonia', 'lat': -8.76116, 'lon': -63.90043},\n{ 'uid' : 12, 'name':  'Acre', 'lat': -9.975377, 'lon': -67.8248977 },\n{ 'uid' : 13, 'name':  'Amazonas', 'lat': -3.1190275, 'lon': -60.02173140000002},\n{ 'uid' : 14, 'name':  'Roraima', 'lat': 2.819444, 'lon': -60.671389},\n{ 'uid' : 15, 'name':  'Para', 'lat': -1.4557549, 'lon': -48.49017989999999},\n{ 'uid' : 16, 'name':  'Amapa', 'lat': 0.033889, 'lon': -51.066389},\n{ 'uid' : 17, 'name':  'Tocantins', 'lat': -10.184444, 'lon':  -48.333611},\n{ 'uid' : 21, 'name':  'Maranhao', 'lat': -2.53911, 'lon': -44.282905},\n{ 'uid' : 22, 'name':  'Piaui', 'lat':  \t-5.044685, 'lon':  \t-42.766233},\n{ 'uid' : 23, 'name':  'Ceara', 'lat': -3.7318616, 'lon': -38.5266704},\n{ 'uid' : 24, 'name':  'Rio Grande do Norte', 'lat': -5.7792569, 'lon': -35.20091600000001},\n{ 'uid' : 25, 'name':  'Paraiba', 'lat': -7.119496, 'lon': -34.845012},\n{ 'uid' : 26, 'name':  'Pernambuco', 'lat': -8.0578381, 'lon': -34.8828969},\n{ 'uid' : 27, 'name':  'Alagoas', 'lat': -9.649856, 'lon': -35.70892},\n{ 'uid' : 28, 'name':  'Sergipe', 'lat': -10.947247, 'lon': -37.073082},\n{ 'uid' : 29, 'name':  'Bahia', 'lat': -12.9730401, 'lon': -38.50230399999998},\n{ 'uid' : 31, 'name':  'Minas Gerais', 'lat': -19.9166813, 'lon': -43.9344931},\n{ 'uid' : 32, 'name':  'Espirito Santo', 'lat': -20.2976178, 'lon': -40.2957768},\n{ 'uid' : 33, 'name':  'Rio de Janeiro', 'lat': -22.9068467, 'lon': -43.1728965},\n{ 'uid' : 35, 'name':  'Sao Paulo', 'lat': -23.5505199, 'lon': -46.63330939999997},\n{ 'uid' : 41, 'name':  'Parana', 'lat': -25.4289541, 'lon': -49.267137},\n{ 'uid' : 42, 'name':  'Santa Catarina', 'lat': -27.5953778 , 'lon': -48.548049900000024},\n{ 'uid' : 43, 'name':  'Rio Grande do Sul', 'lat': -30.0346471, 'lon': -51.217658400000005},\n{ 'uid' : 50, 'name':  'Mato Grosso do Sul', 'lat': -20.469711 , 'lon': -54.620121},\n{ 'uid' : 51, 'name':  'Mato Grosso', 'lat': -15.601534, 'lon': -56.097889},\n{ 'uid' : 52, 'name':  'Goias', 'lat': -16.6868912, 'lon': -49.264794300000005},\n{ 'uid' : 53, 'name':  'Distrito Federal', 'lat': -15.7942287, 'lon': -47.8821658}\n];\n\nexport default states;","import React from \"react\";\nimport { Map, TileLayer, Circle, Popup } from \"react-leaflet\";\nimport { MDBContainer} from \"mdbreact\";\nimport \"../styles/LeafLetMap.css\";\n\nconst LeafletMap = props => {\n  const Circles = () => {\n    let markers = [];\n    for (let i in props.cases) {\n      const position = props.getPosition(parseInt(props.cases[i].uid));\n      if (props.cases[i][props.dataType] !== undefined) {\n        markers.push(\n          <Circle\n            key={\"circle_\" + i}\n            radius={props.cases[i][props.dataType] * 500}\n            center={position}\n            color={props.color}\n          >\n            <Popup>\n              {props.dataOptions[props.dataType].name} em{\" \"}\n              {props.getName(props.cases[i].uid)}: <br />{\" \"}\n              {props.cases[i][props.dataType]}\n            </Popup>\n          </Circle>\n        );\n      }\n    }\n    return markers;\n  };\n\n  return (\n    <MDBContainer className=\"leaflet-container\">\n      <Map center={props.center} zoom={4.6} zoomSnap={0.2}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        <Circles />\n      </Map>\n    </MDBContainer>\n  );\n};\nexport default LeafletMap;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../styles/Linechart.css\";\nimport { MDBContainer, MDBDataTable } from \"mdbreact\";\n\nconst sumStatus = (data, status) => {\n  let count = 0;\n  for (let i in data.values) {\n    const state = data.values[i];\n    if (state[status] !== undefined) {\n      count = count + state[status];\n    }\n  }\n  return count;\n};\n\nconst labels = data => {\n  let dates = [];\n  for (let i in data) {\n    dates.push(data[i].date);\n  }\n  return dates;\n};\n\nconst buildDataset = (data, label) => {\n  let values = [];\n  for (let i in data) {\n    values.push(sumStatus(data[i], label));\n  }\n  return values;\n};\n\nconst datasets = (data, dataOptions) => {\n  let datasets = [];\n  for (let key in dataOptions) {\n    datasets.push({\n      label: dataOptions[key].name,\n      data: buildDataset(data, key),\n      borderColor: dataOptions[key].borderColor,\n      backgroundColor: dataOptions[key].backgroundColor\n    });\n  }\n  return datasets;\n};\n\nconst chartData = (data, dataOptions) => {\n  return {\n    labels: labels(data),\n    datasets: datasets(data, dataOptions)\n  };\n};\n\nconst tableContents = (statesInfo, dataOptions, getName) => {\n  let rows = [];\n  for (let state in statesInfo) {\n    let row = {};\n    row.name = getName(statesInfo[state].uid);\n    for (let type in dataOptions) {\n      if (statesInfo[state][type] !== undefined) {\n        row[type] = statesInfo[state][type];\n      } else {\n        row[type] = 0;\n      }\n    }\n    rows.push(row);\n  }\n  return rows;\n};\n\nconst tableHeaders = dataOptions => {\n  let headers = [];\n  headers.push({\n    label: \"Estado\",\n    field: \"name\",\n    sort: \"asc\"\n  });\n  for (let i in dataOptions) {\n    let header = dataOptions[i];\n    headers.push({\n      label: header.name,\n      field: i,\n      sort: \"asc\"\n    });\n  }\n  return headers;\n};\n\nconst LineChart = props => {\n  return (\n    <MDBContainer>\n      <div className=\"chart\">\n        <Line\n          data={chartData(props.data, props.dataOptions)}\n          options={{ responsive: true }}\n        />\n      </div>\n      <div className=\"list\">\n        <MDBDataTable\n          scrollY\n          maxHeight=\"200px\"\n          striped\n          bordered\n          small\n          data={{\n            columns: tableHeaders(props.dataOptions),\n            rows: tableContents(\n              props.statesInfo,\n              props.dataOptions,\n              props.getName\n            )\n          }}\n        />\n      </div>\n    </MDBContainer>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"../styles/Options.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nconst Status = props => {\n  const statusCollection = [];\n  for (let key in props.dataOptions) {\n    const newStatus = props.dataOptions[key];\n    statusCollection.push(\n      <div key={\"status-body_\" + key} className={`status-body ${key}`}>\n        <div key={\"status-header_\" + key} className={`status-header ${key}`}>\n          {newStatus.name}\n        </div>\n        {props.sumStatus(key)}\n      </div>\n    );\n  }\n  return statusCollection;\n};\n\nconst showOnMapOptions = dataOptions => {\n  let options = [];\n  for (let key in dataOptions) {\n    options.push({\n      value: key,\n      label: dataOptions[key].name\n    });\n  }\n  return options;\n};\n\nconst Options = props => {\n  return (\n    <div className=\"Options\">\n      <div className=\"option\">\n        Day: {props.day}\n        <Slider\n          min={0}\n          max={props.data.length - 1}\n          defaultValue={props.data.length - 1}\n          handle={props.handleSlider}\n        />\n      </div>\n      <Status {...props} />\n      Exibir no Mapa:\n      <Dropdown\n        options={showOnMapOptions(props.dataOptions)}\n        onChange={props.handleDropdown}\n        placeholder={props.dataOptions[props.dataType].name}\n      />\n      <div style={{ marginTop: \"5em\" }}>\n        [Fonte]: Ministério da Saúde - Governo Brasileiro\n      </div>\n      <div\n        style={{ color: \"blue\", cursor: \"pointer\" }}\n        onClick={() =>\n          window.open(\n            \"http://plataforma.saude.gov.br/novocoronavirus/\",\n            \"_blank\"\n          )\n        }\n      >\n        Notificação de casos COVID-19\n      </div>\n      <div\n        style={{ color: \"blue\", cursor: \"pointer\", marginTop: \"1em\" }}\n        onClick={() =>\n          window.open(\"https://github.com/caio-davi/covid-br\", \"_blank\")\n        }\n      >\n        GitHub\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport states from \"../states\";\nimport LeafletMap from \"./LeafLetMap\";\nimport LineChart from \"./LineChart\";\nimport Options from \"./Options\";\n\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst Handle = Slider.Handle;\nconst center = [-15, -52];\n\nconst dataOptions = {\n  suspects: {\n    name: \"Casos Suspeitos\",\n    borderColor: \"royalblue\",\n    backgroundColor: \"cornflowerblue\",\n    enabled: false\n  },\n  cases: {\n    name: \"Casos Confirmados\",\n    color: \"red\",\n    borderColor: \"darksalmon\",\n    backgroundColor: \"Salmon\",\n    enabled: false\n  },\n  refuses: {\n    name: \"Casos Descartados\",\n    color: \"green\",\n    borderColor: \"darkseagreen\",\n    backgroundColor: \"Seagreen\",\n    enabled: false\n  },\n  deaths: {\n    name: \"Óbitos\",\n    color: \"grey\",\n    borderColor: \"LightSteelBlue\",\n    backgroundColor: \"lightslategray\",\n    enabled: false\n  }\n};\n\nconst getName = uId => {\n  for (let i in states) {\n    if (states[i].uid === uId) {\n      return states[i].name;\n    }\n  }\n};\n\nconst getPosition = uId => {\n  for (let i in states) {\n    if (states[i].uid === uId) {\n      return [states[i][\"lat\"], states[i][\"lon\"]];\n    }\n  }\n};\n\nfunction App() {\n  const [day, setDay] = React.useState(0);\n  const [dataType, setDataType] = React.useState(\"cases\");\n  const [data, setData] = React.useState(\"\");\n\n  React.useEffect(() => {\n    fetch(\n      \"https://corona-br.herokuapp.com/http://plataforma.saude.gov.br/novocoronavirus/resources/scripts/database.js\",\n      {\n        method: \"POST\",\n        headers: new Headers({\n          Origin: \"https://caio-davi.github.io/covid-br/\"\n        })\n      }\n    )\n      .then(response => response.text())\n      .then(response => {\n        const str = response.substring(13, response.length);\n        const newData = JSON.parse(str).brazil;\n        newData.splice(0, 25);\n        setData(newData);\n        setDay(newData.length - 1);\n      });\n  }, []);\n\n  const sumStatus = status => {\n    let count = 0;\n    for (let i in data[day].values) {\n      const state = data[day].values[i];\n      if (state[status] !== undefined) {\n        count = count + state[status];\n      }\n    }\n    return count;\n  };\n\n  const handleDropdown = obj => {\n    setDataType(obj.value);\n  };\n\n  const handleSlider = props => {\n    const { value, dragging, index, ...restProps } = props;\n    setDay(value);\n    return (\n      <Tooltip\n        prefixCls=\"rc-slider-tooltip\"\n        overlay={value}\n        visible={dragging}\n        placement=\"top\"\n        key={index}\n      >\n        <Handle value={value} {...restProps} />\n      </Tooltip>\n    );\n  };\n\n  if (Object.keys(data).length > 1) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Infográfico da Evolução do COVID-19 no Brasil\n        </header>\n        <div className=\"Body\">\n          <Options\n            data={data}\n            handleSlider={handleSlider}\n            day={data[day].date}\n            dataOptions={dataOptions}\n            sumStatus={sumStatus}\n            dataType={dataType}\n            handleDropdown={handleDropdown}\n          />\n          <div>\n            <LeafletMap\n              center={center}\n              getName={getName}\n              getPosition={getPosition}\n              dataType={dataType}\n              color={dataOptions[dataType].borderColor}\n              dataOptions={dataOptions}\n              cases={data[day].values}\n            />\n          </div>\n          <LineChart\n            data={data}\n            getName={getName}\n            dataOptions={dataOptions}\n            statesInfo={data[day].values}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}